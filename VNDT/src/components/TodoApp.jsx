import { useState, useRef } from "react";

function TodoApp() {
  const [todos, setTodos] = useState([]); // Danh s√°ch c√¥ng vi·ªác
  const [editIndex, setEditIndex] = useState(null); // L∆∞u v·ªã tr√≠ c√¥ng vi·ªác ƒëang s·ª≠a
  const inputRef = useRef(null); // Tham chi·∫øu ƒë·∫øn √¥ input

  // Th√™m ho·∫∑c c·∫≠p nh·∫≠t c√¥ng vi·ªác
  const handleAddOrUpdate = () => {
    const newTodo = inputRef.current.value.trim();
    if (!newTodo) return; // Kh√¥ng nh·∫≠p th√¨ kh√¥ng l√†m g√¨

    if (editIndex !== null) {
      // N·∫øu ƒëang s·ª≠a
      console.log(`C·∫≠p nh·∫≠t c√¥ng vi·ªác: "${todos[editIndex]}" ‚Üí "${newTodo}"`);
      const updatedTodos = [...todos];
      updatedTodos[editIndex] = newTodo;
      setTodos(updatedTodos);
      setEditIndex(null);
    } else {
      // N·∫øu ƒëang th√™m m·ªõi
      console.log(`Th√™m c√¥ng vi·ªác: "${newTodo}"`);
      setTodos([...todos, newTodo]);
    }

    console.log(" Danh s√°ch c√¥ng vi·ªác hi·ªán t·∫°i:", [...todos, newTodo]);
    inputRef.current.value = ""; // X√≥a input sau khi nh·∫≠p
  };

  // X√≥a c√¥ng vi·ªác
  const handleDelete = (index) => {
    console.log(`üóë X√≥a c√¥ng vi·ªác: "${todos[index]}"`);
    setTodos(todos.filter((_, i) => i !== index));
    console.log(
      "Danh s√°ch c√¥ng vi·ªác sau khi x√≥a:",
      todos.filter((_, i) => i !== index)
    );
  };

  // Ch·ªânh s·ª≠a c√¥ng vi·ªác
  const handleEdit = (index) => {
    console.log(`Ch·ªânh s·ª≠a c√¥ng vi·ªác: "${todos[index]}"`);
    inputRef.current.value = todos[index]; // Hi·ªÉn th·ªã n·ªôi dung c·∫ßn s·ª≠a
    setEditIndex(index); // ƒê√°nh d·∫•u ƒëang s·ª≠a
  };

  return (
    <div className="p-4 bg-gray-100 rounded-lg max-w-md mx-auto">
      <h2 className="text-2xl font-bold mb-4">Todo App (useRef + useState)</h2>

      <div className="mb-2">
        <input
          ref={inputRef}
          type="text"
          placeholder="Nh·∫≠p c√¥ng vi·ªác..."
          className="border p-2 mr-2"
        />
        <button
          onClick={handleAddOrUpdate}
          className="p-2 bg-blue-500 text-white"
        >
          {editIndex !== null ? "C·∫≠p nh·∫≠t" : "Th√™m"}
        </button>
      </div>

      <ul>
        {todos.map((todo, index) => (
          <li
            key={index}
            className="flex justify-between items-center p-2 border"
          >
            <span>{todo}</span>
            <div>
              <button
                onClick={() => handleEdit(index)}
                className="mr-2 p-1 bg-yellow-500 text-white"
              >
                S·ª≠a
              </button>
              <button
                onClick={() => handleDelete(index)}
                className="p-1 bg-red-500 text-white"
              >
                X√≥a
              </button>
            </div>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default TodoApp;
